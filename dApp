import React, { useState } from 'react';
import { algodClient, compileTeal, executeTransaction } from './utils/algorand';
import './App.css';

function App() {
  const [assetId, setAssetId] = useState('');
  const [propMinAssets, setPropMinAssets] = useState('');
  const [voteEscMinAssets, setVoteEscMinAssets] = useState('');
  const [voteEscMinBlocks, setVoteEscMinBlocks] = useState('');
  const [voteMinAssets, setVoteMinAssets] = useState('');
  const [voteMinBlocks, setVoteMinBlocks] = useState('');
  const [designatedWallet, setDesignatedWallet] = useState('');
  const [escrowedFunds, setEscrowedFunds] = useState('');
  const [proposition, setProposition] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    const contract = `
    // define voting options
    txn ApplicationArgs 0x415050524f5645  // 'APPROVE'
    txn ApplicationArgs 0x44454e59      // 'DENY'
    
    // read global state
    byte "asset_id"
    int ${assetId}
    app_global_get
    int 1
    >=
    byte "prop_min_assets"
    int ${propMinAssets}
    app_global_get
    int 1
    >=
    byte "vote_esc_min_assets"
    int ${voteEscMinAssets}
    app_global_get
    int ${voteEscMinBlocks}
    app_global_get
    int 1
    >=
    byte "vote_min_assets"
    int ${voteMinAssets}
    app_global_get
    int ${voteMinBlocks}
    app_global_get
    int 1
    >=
    
    // define escrow transaction
    byte "${designatedWallet}"
    int ${escrowedFunds}
    int ${voteEscMinBlocks}
    escrow
    
    // handle proposition creation
    int 0
    txn ApplicationArgs 0
    byte "prop_min_assets"
    int ${propMinAssets}
    app_opted_in
    gtxn 1 AssetHolding.AssetID
    int 1
    ==
    &&=
    push 0
    byte "${proposition}"
    byte "escrow"
    txn ApplicationArgs 0
    app_create
    
    // handle proposition escalation
    int 1
    byte "vote_esc_min_assets"
    app_opted_in
    gtxn 1 AssetHolding.AssetID
    int 1
    ==
    &&=
    gtxn 0 ApplicationArgs 0
    app_local_get_ex
    pop
    push 1
    byte "escrow"
    txn ApplicationArgs 0
    app_opted_in
    gtxn 1 AssetHolding.AssetID
    int 1
    ==
    &&=
    byte "prop_min_assets"
    app_local_get_ex
    int ${voteEscMinAssets}
    >=
    ||=
    push 1
    byte "vote_esc_min_assets"
    app_local_put
    
    // handle vote execution
    int 1
    byte "vote_min_assets"
    app_opted_in
    gtxn 1 AssetHolding.AssetID
    int 1
    ==
    &&=
    gtxn 0 ApplicationArgs 0
    app_local_get_ex
    pop
    push 1
    byte "
